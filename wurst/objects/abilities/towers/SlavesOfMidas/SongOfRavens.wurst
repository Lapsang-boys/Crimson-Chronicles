package SongOfRavens

import Assets
import ChannelAbilityPreset
import DummyRecycler

import TowerConstants
import Tooltip

// ##################################################################
// ###################### Ability objects ###########################
// ##################################################################

@compiletime function generateSongOfRavensDummy()
    new ChannelAbilityPreset(ID_SONG_OF_RAVENS_DUMMY_ICON, 1, true)
        ..setHotkeyNormal("")
        ..setTooltipNormal(1, tooltipCustomBasic("Passive", "Song of Ravens",""))
        ..setTooltipNormalExtended(1, tooltipTextFlavor(
            "Keres deals 20% more damage to enemies below 1/4 of their total health.",
            "The quiver is filled with arrows hand-crafted by her demands. Fletching made from raven feathers, her signature, and arrowheads made by melted coins to grant safe passage in to the afterlife."))

        ..presetTargetTypes(Targettype.PASSIVE)
        ..setIconNormal(Icons.bTNCannibalize)
        ..setButtonPositionNormalX(0)
        ..setButtonPositionNormalY(2)

function songOfRavens()
    let victim = GetTriggerUnit()
    let keres = GetAttacker()

    // Add ability
    let dummy = DummyRecycler.get(keres.getPos(), keres.getFacingAngle())
    dummy.addAbility(ID_SONG_OF_RAVENS)
    dummy.setAbilityLevel(ID_SONG_OF_RAVENS, 1)
    dummy.setAbilityCooldown(ID_SONG_OF_RAVENS, 1, 0)

    keres.setAnimation("attack")
    
    // Cast ability
    if victim.isAlive()
        dummy.issueTargetOrder("acidbomb", victim)

    DummyRecycler.recycle(dummy, 0.5)
        
function isOnTheVergeOfDeath() returns bool
    return GetTriggerUnit().getHP()/GetTriggerUnit().getMaxHP() <= 0.25

function isKeres() returns bool
    return GetAttacker().getTypeId() == ID_TOWER_KERES
        
@initThird function initSongOfRavens()
    CreateTrigger()
    ..addAction(function songOfRavens)
    ..addCondition(Condition(function isKeres))
    ..addCondition(Condition(function isOnTheVergeOfDeath))
    ..registerAnyUnitEvent(EVENT_PLAYER_UNIT_ATTACKED)


@compiletime function generateSongOfRavens()
    new AbilityDefinitionAlchemistAcidBomb(ID_SONG_OF_RAVENS)
    ..setMissileArt(Abilities.blackArrowMissile)
    ..setAreaofEffect(1, 0)
    ..setMissileArc(0.05)
    ..setMissileSpeed(1200)

    ..setDurationNormal(1, 0.0)
    ..setPrimaryDamage(1, 120)

    ..setManaCost(1, 0)
    ..setCastingTime(1, 0.2)
    ..setCastRange(1, 600)
