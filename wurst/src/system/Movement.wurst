package Movement

import Regions
import GameplayConstants
import ErrorHandling
import LinkedList

import PlayerData

public function unit.getPlayerN() returns int
    let pos = this.getPos()
    for i = 0 to NUMBER_OF_PLAYERS-1
        let area = playerData.get(i).getPlayerRegion()
        if pos.isInRect(area)
            return i

    error("This creature is not in any player's area.")
    return 0

// Pre-condition: unit arrives at correct node => increase custom value on unit u before calling GetNext.
public function unit.getNext() returns vec2
    var p = this.getPlayerN()
    PlayerData pd = playerData.get(p)
    let cv = this.getUserData()
    let area = pd.getArea()
    let pathId = cv.getPathId()
    let nodeId = cv.getNodeId()

    if pathId > area.paths.size()
        error("Invalid custom value for unit: "+this.getName())
        return vec2(0, 0)

    if nodeId > area.paths.get(pathId).rects.size()
        error("Invalid custom value for unit: "+this.getName())
        return vec2(0, 0)

    return area.paths.get(pathId).rects.get(nodeId).getCenter()

public function unit.getPrev() returns vec2
    var p = this.getPlayerN()
    PlayerData pd = playerData.get(p)
    let cv = this.getUserData()
    let area = pd.getArea()
    let pathId = cv.getPathId()
    let nodeId = cv.getNodeId()

    if pathId > area.paths.size()
        error("Invalid custom value for unit: "+this.getName())
        return vec2(0, 0)

    if nodeId > area.paths.get(pathId).rects.size()
        error("Invalid custom value for unit: "+this.getName())
        return vec2(0, 0)

    return area.paths.get(pathId).rects.get(nodeId - 1).getCenter()


public function unit.getArea() returns rect
    var p = this.getPlayerN()
    PlayerData pd = playerData.get(p)
    let area = pd.getArea()
    return area.area

public function unit.getSpawn() returns rect
    var p = this.getPlayerN()
    PlayerData pd = playerData.get(p)
    let area = pd.getArea()
    let cv = this.getUserData()
    let pathId = cv.getPathId()

    if pathId > area.paths.size()
        error("Invalid custom value for unit: "+this.getName())
        return null

    return area.paths.get(pathId).rects.getFirst()

function int.getPathId() returns int
    let lower = this.moduloInt(10)
    return (this-lower) div 10

function int.getNodeId() returns int
    return this.moduloInt(10)

public function unit.getNodeId() returns int
    return this.getUserData().getNodeId()

public function unit.getPathId() returns int
    return this.getUserData().getPathId()
    