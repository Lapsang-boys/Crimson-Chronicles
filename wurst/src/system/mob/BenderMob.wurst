package BenderMob

import TimerUtils

import Alexandria
import Squad
import Movement
import TimedEffect

public class BenderBase extends MobWrapper implements Enterer
    real bendDistance
    string bendFx
    string bendAnimation
    real bendAnimationDuration

    angle direction
    vec2 nextNode
    vec2 newPos

    timer t

    construct(unit u, real bendDistance, string bendFx, string bendAnimation, real bendAnimationDuration)
        super(u)
        this.bendDistance = bendDistance
        this.bendFx = bendFx
        this.bendAnimation = bendAnimation
        this.bendAnimationDuration = bendAnimationDuration
        this.t = getTimer()

    override function onEnter()
        super.u.pause()
        super.u.setAnimation(this.bendAnimation)

        vec2 origPos = super.u.getPos()
        this.nextNode = getNext(super.u)
        this.direction = origPos.angleTo(nextNode)
        this.newPos = origPos.polarOffset(this.direction, this.bendDistance)

        // createTimedEffect(origPos, 2., this.bendFx)
        super.u.setFacing(this.direction)

        this.t.setData(this castTo int)
        this.t.start(bendAnimationDuration, function bend)

    ondestroy
        this.t.release()

function bend()
    timer t = GetExpiredTimer()
    BenderBase bb = t.getData() castTo BenderBase

    createTimedEffect(bb.u.getPos(), 2., bb.bendFx)

    bb.u.setPos(bb.newPos)
    bb.u.unpause()
    bb.u.issuePointOrder("move", bb.nextNode)

    createTimedEffect(bb.u.getPos(), 2., bb.bendFx)


// Squad hook
public class Bender implements Hooker
    real bendDistance
    string bendFx
    string bendAnimation
    real bendAnimationDuration

    construct(real bendDistance, string bendFx, string bendAnimation, real bendAnimationDuration)
        this.bendDistance = bendDistance
        this.bendFx = bendFx
        this.bendAnimation = bendAnimation
        this.bendAnimationDuration = bendAnimationDuration

    function hook(unit u)
        new BenderBase(u, this.bendDistance, this.bendFx, this.bendAnimation, this.bendAnimationDuration)