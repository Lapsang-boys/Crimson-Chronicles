package BenderMob

import ClosureTimers

import Alexandria
import Movement
import TimedEffect

public class BenderMob extends MobWrapper implements Enterer
    real bendDistance
    string bendFx
    string bendAnimation
    real bendAnimationDuration

    angle direction
    vec2 nextNode
    vec2 newPos

    construct(unit u, real bendDistance, string bendFx, string bendAnimation, real bendAnimationDuration)
        super(u)
        this.bendDistance = bendDistance
        this.bendFx = bendFx
        this.bendAnimation = bendAnimation
        this.bendAnimationDuration = bendAnimationDuration

    override function onEnter()
        startBend(this.u, this.bendAnimation, this.bendAnimationDuration, this.bendDistance, this.bendFx)

public function startBend(unit u, string bendAnimation, real bendAnimationDuration, real bendDistance, string bendFx)
    u.pause()
    u.setAnimation(bendAnimation)

    vec2 origPos = u.getPos()
    vec2 nextNode = u.getNext()
    angle direction = origPos.angleTo(nextNode)
    vec2 newPos = origPos.polarOffset(direction, bendDistance)

    createTimedEffect(origPos, 2., bendFx)
    u.setFacing(direction)
    doAfter(bendAnimationDuration, () -> begin
        createTimedEffect(u.getPos(), 2., bendFx)
        u.setPos(newPos)
        u.unpause()
        u.issuePointOrder("move", nextNode)
        createTimedEffect(u.getPos(), 2., bendFx)
    end)

