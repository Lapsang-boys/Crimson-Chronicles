package CrowMorpherMob

import TimerUtils

import Alexandria
import Movement
import TimedEffect
import FelwoodMobList
import PlayerData

public class CrowMorpherMob extends MobWrapper implements Ticker
    timer t
    real morphPercent

    string morphFx

    construct(unit u, real morphPercent, string morphFx)
        super(u)
        this.t = getTimer()
        this.morphPercent = morphPercent

        this.morphFx = morphFx

        startTick()

    override function startTick()
        t.setData(this castTo int)
        t.startPeriodic(0.25, function healthCheck)

    ondestroy
        this.t.release()


function healthCheck()
    timer t = GetExpiredTimer()
    CrowMorpherMob mhm = t.getData() castTo CrowMorpherMob

    if mhm.u.getHP()/mhm.u.getMaxHP() <= mhm.morphPercent
        morph(mhm)
        t.pause()

function morph(CrowMorpherMob mhm)
    player p = Player(mhm.u.getPlayerN())
    PlayerData pd = playerData.get(p.getId())
    attatchTimedEffect(mhm.u, 2, mhm.morphFx, "origin")

    mhm.u.setAbilityLevel(ID_SPELL_CROW_MORPH, pd.difficulty + 1)
    mhm.u.issueImmediateOrder("ravenform")

    doAfter(1.65, () -> begin
        if mhm.u.isAlive()
            mhm.u.issuePointOrder("move", mhm.u.getNext())
    end)
