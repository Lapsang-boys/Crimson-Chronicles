package End

import InitRegions

import TypeCasting
import SoundUtils
import LinkedList

import Regions
import Constants
import Movement
import Levels
import PlayerData

let LEAK_FX = "Abilities\\Spells\\Items\\AIil\\AIilTarget.mdl"
let LEAK_SOUND = "Sound\\Interface\\CreepAggroWhat1.wav"

class UnitWrapper
    unit u
    int playerNum
    construct(unit u)
        this.u = u

    ondestroy
        u.remove()
        PlayerData pd = playerData.get(this.playerNum)
        pd.registerMobDeath()

function leak()
    let u = GetTriggerUnit()
    int n = getPlayerN(u)
    UnitWrapper uw = new UnitWrapper(u)
    player p = Player(n)
    
    PlayerData pd = playerData.get(n)
    pd.registerLeak()
    
    SoundDefinition sd = new SoundDefinition(LEAK_SOUND, false)
    sd.playForPlayer(p)

    flashEffect(LEAK_FX, u.getPos())

    destroy uw
    
    // SFX

function isUnitOwnedByPlayerBrown() returns boolean
    return GetTriggerUnit().getOwner() == PLAYER_BROWN

function isValid() returns boolean
    return GetTriggerUnit().getUserData() == 4

trigger endEnter = CreateTrigger()

init
    endEnter.addCondition(Condition(function isUnitOwnedByPlayerBrown))
    endEnter.addAction(function leak)

    for i in ends
        let r = rectFromIndex(i)
        endEnter.addCondition(Condition(function isValid))
        TriggerRegisterEnterRectSimple(endEnter, r)
