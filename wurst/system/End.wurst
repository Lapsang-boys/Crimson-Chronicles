package End

import InitRegions

import Assets
import TypeCasting
import SoundUtils
import LinkedList

import Regions
import Constants
import Movement
import Levels
import PlayerData

class UnitWrapper
    unit u
    int playerNum
    construct(unit u, int playerNum)
        this.u = u
        this.playerNum = playerNum

    ondestroy
        u.remove()
        PlayerData pd = playerData.get(this.playerNum)
        pd.registerMobDeath()

function leak()
    let u = GetTriggerUnit()
    int n = getPlayerN(u)
    UnitWrapper uw = new UnitWrapper(u, n)
    player p = Player(n)

    PlayerData pd = playerData.get(n)
    int lifeTaken = u.getFoodUsed()
    pd.registerLeak(lifeTaken, unitBounty.get(u.getTypeId()))

    SoundDefinition sd = new SoundDefinition(Sounds.creepAggroWhat1, false)
    sd.playForPlayer(p)

    flashEffect(Abilities.aIilTarget, u.getPos())

    destroy uw

    // SFX

function isUnitOwnedByPlayerBrown() returns boolean
    return GetTriggerUnit().getOwner() == PLAYER_BROWN

function isValid() returns boolean
    return GetTriggerUnit().getUserData() == 4

trigger endEnter = CreateTrigger()

init
    endEnter.addCondition(Condition(function isUnitOwnedByPlayerBrown))
    endEnter.addAction(function leak)

    for i in ends
        let r = rectFromIndex(i)
        endEnter.addCondition(Condition(function isValid))
        TriggerRegisterEnterRectSimple(endEnter, r)
