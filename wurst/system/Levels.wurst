package Levels

import LinkedList

import Squad
import Constants
import MonsterType
import Colorscheme

tuple spawnInterval (real low, real high)
public class Level
    LinkedList<int> unitChain
    int num
    spawnInterval si
    int bounty
    int bonus
    string levelName
    LinkedList<MonsterType> types
    string desc

    construct (LinkedList<int> unitChain, spawnInterval si, int num, int bounty, int bonus, string levelName, string desc, LinkedList<MonsterType> types)
        this.unitChain = unitChain
        this.num = num
        this.si = si
        this.bounty = bounty
        this.bonus = bonus
        this.levelName = levelName
        this.desc = desc
        this.types = types

    function getDuration() returns real
        return GetRandomReal(this.si.low, this.si.high)

    function printInfo(player p)
        printTimedToPlayer(this.levelName, DISPLAY_TIME, p)
        if this.desc.length() > 0
            printTimedToPlayer(this.desc, DISPLAY_TIME, p)
        for mt in this.types
            printTimedToPlayer(monsterHint(mt), DISPLAY_TIME, p)

public LinkedList<Level> levels = new LinkedList<Level>

function levelNameMsg(int num, string name) returns string
    return discreetColor.colorize("[") + textColor.colorize("Level ") + numberColor.colorize(I2S(num)) + discreetColor.colorize("]")
            + textColor.colorize(" - ") + nameColor.colorize(name)

function levelDescriptionMsg(string desc) returns string
    return textColor.colorize(desc)

init
    // ============== Area 1 ==============
    LinkedList<int> L0Chain = new LinkedList<SquadMember>..add(new SquadMember(ID_PATH_SHOWER, 3)).toUnitChain()
    Level L0 = new Level(
        L0Chain,
        spawnInterval(1.35, 1.35),
        3, // Num
        0, // Bounty
        0, // Bonus
        levelNameMsg(0, "Path shower"),
        levelDescriptionMsg(""),
        new LinkedList<MonsterType>..add(MonsterType.INVULNERABLE))
    levels.add(L0)

    LinkedList<int> L1Chain = new LinkedList<SquadMember>..add(new SquadMember(ID_RACCOON, 10)).toUnitChain()
    Level L1 = new Level(
        L1Chain,
        spawnInterval(1.35, 1.35),
        10, // Num
        1, // Bounty
        10, // Bonus
        levelNameMsg(1, "Raccoon"),
        levelDescriptionMsg("Description"),
        new LinkedList<MonsterType>)
    levels.add(L1)

    LinkedList<int> L2Chain = new LinkedList<SquadMember>..add(new SquadMember(ID_ACCO, 10)).toUnitChain()
    Level L2 = new Level(
        L2Chain,
        spawnInterval(1.35, 1.35),
        10, // Num
        1, // Bounty
        10, // Bonus
        levelNameMsg(2, "Acolyte"),
        levelDescriptionMsg("Description"),
        new LinkedList<MonsterType>)
    levels.add(L2)

    LinkedList<int> L3Chain = new LinkedList<SquadMember>..add(new SquadMember(ID_ARCHY, 10)).toUnitChain()
    Level L3 = new Level(
        L3Chain,
        spawnInterval(1.35, 1.35),
        10, // Num
        1, // Bounty
        10, // Bonus
        levelNameMsg(3, "Archer"),
        levelDescriptionMsg("Description"),
        new LinkedList<MonsterType>)
    levels.add(L3)

    LinkedList<int> L4Chain = new LinkedList<SquadMember>
    ..add(new SquadMember(ID_RACCOON, 2))
    ..add(new SquadMember(ID_ACCO, 3))
    ..add(new SquadMember(ID_RACCOON, 2))
    ..add(new SquadMember(ID_ARCHY, 1))
    ..add(new SquadMember(ID_RACCOON, 2)).toUnitChain()
    Level L4 = new Level(
        L4Chain,
        spawnInterval(1.35, 1.35),
        10, // Num
        1, // Bounty
        10, // Bonus
        levelNameMsg(4, "Squaden"),
        levelDescriptionMsg("Description"),
        new LinkedList<MonsterType>)
    levels.add(L4)

