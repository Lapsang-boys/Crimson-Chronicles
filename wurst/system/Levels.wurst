package Levels

import LinkedList
import HashMap

import Squad
import Constants
import MonsterType
import Colorscheme

// ----------------------------------------------------------------------------
// =============== Level constants (mobs and lifelost per mob) ================
// ----------------------------------------------------------------------------

// Mobs
public constant ID_MOB_BASE_UNIT = 'earc'
public constant ID_PATH_SHOWER = 'm000'
public constant ID_RACCOON = 'm001'
public constant ID_ACCO = 'm002'
public constant ID_ARCHY = 'm003'

// Hashmap storing life lost per mob
public HashMap<int, int> unitBounty = new HashMap<int, int>
..put(ID_PATH_SHOWER, 0)
..put(ID_RACCOON, 1)
..put(ID_ACCO, 1)
..put(ID_ARCHY, 1)

// TODO:
// Map indiviual mobs to creature type
// Map levels to description(?)

// ----------------------------------------------------------------------------
// ===================== Level class and methods ==============================
// ----------------------------------------------------------------------------

public class Level
    LinkedList<SquadMember> squadChain
    int bonus
    string levelName
    string desc
    LinkedList<MonsterType> types

    construct (LinkedList<SquadMember> squadChain, int bonus, string levelName, string desc, LinkedList<MonsterType> types)
        this.squadChain = squadChain
        this.bonus = bonus
        this.levelName = levelName
        this.desc = desc
        this.types = types

    function printInfo(player p)
        printTimedToPlayer(this.levelName, DISPLAY_TIME, p)
        if this.desc.length() > 0
            printTimedToPlayer(this.desc, DISPLAY_TIME, p)
        for mt in this.types
            printTimedToPlayer(monsterHint(mt), DISPLAY_TIME, p)

public LinkedList<Level> levels = new LinkedList<Level>

function levelNameMsg(int num, string name) returns string
    return discreetColor.colorize("[") + textColor.colorize("Level ") + numberColor.colorize(I2S(num)) + discreetColor.colorize("]")
            + textColor.colorize(" - ") + nameColor.colorize(name)

function levelDescriptionMsg(string desc) returns string
    return textColor.colorize(desc)

// ----------------------------------------------------------------------------
// ============================= Level objects ================================
// ----------------------------------------------------------------------------

init
    // ============== Area 1 ==============
    Level L0 = new Level(
        toCenterSquad(ID_PATH_SHOWER, 3, 0),
        0, // Bonus
        levelNameMsg(0, "Path shower"),
        levelDescriptionMsg(""),
        new LinkedList<MonsterType>..add(MonsterType.INVULNERABLE))
    levels.add(L0)

    Level L1 = new Level(
        toDefaultSquad(ID_RACCOON, 10, 1),
        10, // Bonus
        levelNameMsg(1, "Raccoon"),
        levelDescriptionMsg("Description"),
        new LinkedList<MonsterType>)
    levels.add(L1)

    Level L2 = new Level(
        toDefaultSquad(ID_ACCO, 10, 1),
        10, // Bonus
        levelNameMsg(2, "Acolyte"),
        levelDescriptionMsg("Description"),
        new LinkedList<MonsterType>)
    levels.add(L2)

    Level L3 = new Level(
        toDefaultSquad(ID_ARCHY, 10, 1),
        10, // Bonus
        levelNameMsg(3, "Archer"),
        levelDescriptionMsg("Description"),
        new LinkedList<MonsterType>)
    levels.add(L3)

    LinkedList<SquadMember> L4Chain = new LinkedList<SquadMember>
    ..add(new SquadMember(ID_RACCOON, 2, 1, SpawnPosition.LEFT, spawnInterval(0.1, 0.1)))
    ..add(new SquadMember(ID_ACCO, 3, 1, SpawnPosition.CENTER, spawnInterval(0.1, 0.1)))
    ..add(new SquadMember(ID_RACCOON, 2, 1, SpawnPosition.RIGHT, spawnInterval(0.1, 0.1)))
    ..add(new SquadMember(ID_ARCHY, 1, 1, SpawnPosition.CENTER, spawnInterval(3.1, 3.1)))
    ..add(new SquadMember(ID_RACCOON, 2, 1, SpawnPosition.RANDOM, spawnInterval(5.1, 5.1)))
    .toSquadChain()
    Level L4 = new Level(
        L4Chain,
        10, // Bonus
        levelNameMsg(4, "Squaden"),
        levelDescriptionMsg("Description"),
        new LinkedList<MonsterType>)
    levels.add(L4)

