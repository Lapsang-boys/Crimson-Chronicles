package Spawn

import Assets
import TimerUtils
import OnUnitEnterLeave
import RegisterEvents
import HashMap
import SoundUtils

import Squad
import Movement
import Leaderboard
import Constants
import Levels
import PlayerData

// Summon level sound hashmap
HashMap<int, string> SUMMON_LEVEL_SOUND_MAP = new HashMap<int, string>

class TimerData
	player p
	Level l
	int cur

	construct(player p, Level l)
		this.p = p
		this.l = l
		this.cur = 0

function spawnLevel()
	let builder = GetTriggerUnit()
	let p = builder.getOwner()
	builder.removeAbility(ID_NEXT_LEVEL)
	builder.addAbility(ID_LEVEL_IN_PROGRESS)
	PlayerData pd = playerData.get(p.getId())
	playSummonLevelSound(pd)
	pd.levelInProgress = true

	int levelIndex = pd.level
	let l = levels.get(levelIndex)

	TimerData lt = new TimerData(p, l)
	let t = getTimer()

	t.setData(lt castTo int)
	t.start(0.1, function summonMobs)
	l.printInfo(p)
	updateLevel(p, pd.level)

function summonMobs()
	let t = GetExpiredTimer()
	let lt = t.getData() castTo TimerData
	let p = lt.p
	int num = lt.l.squadChain.size()

	if lt.cur == num or (not playerData.get(p.getId()).levelInProgress)
		t.release()
		return

	SquadMember single = lt.l.squadChain.get(lt.cur)
	lt.cur = lt.cur + 1
	real duration
	if lt.cur == num
		duration = 0.1
	else
		duration = lt.l.squadChain.get(lt.cur).si.getDuration()

	rect spawn = getSpawn(p)
	var pos = spawn.randomPoint()
	switch single.sp
		case SpawnPosition.LEFT
			pos = vec2(spawn.getLeftBot().x+128, spawn.getCenterY())
		case SpawnPosition.CENTER
			pos = spawn.getCenter()
		case SpawnPosition.RIGHT
			pos = vec2(spawn.getRightBot().x-128, spawn.getCenterY())
		case SpawnPosition.RANDOM
			pos = spawn.randomPoint()

	let u = createUnit(PLAYER_BROWN, single.u_id, pos, angle(PI/2))
	flashEffect(Abilities.aIilTarget, pos)

	u.setUserData(1)
	u.issuePointOrder("move", getNext(u))

	t.start(duration, function summonMobs)

function playSummonLevelSound(PlayerData pd)
	let sp = SUMMON_LEVEL_SOUND_MAP.get(pd.builder.getTypeId())
	SoundDefinition sd = new SoundDefinition(sp, false)
	sd.playForPlayer(pd.p)


init
	registerSpellEffectEvent(ID_NEXT_LEVEL, function spawnLevel)

	SUMMON_LEVEL_SOUND_MAP.put(ID_BUILDER_BLACK, SOUND_BUILDER_BLACK)
	SUMMON_LEVEL_SOUND_MAP.put(ID_BUILDER_REG, SOUND_BUILDER_REG)